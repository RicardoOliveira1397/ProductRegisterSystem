@using ControleDeContatos.Enums;
@model UsuarioModel
@{
	ViewData["Title"] = "Editar usuário";
}

<div class="text-center">
    <h1 class="display-4"> Editar contato</h1>
</div>

<form asp-controller="Usuario" asp-action="Alterar">
    <input type="hidden" asp-for="Id" /> <!-- Campo oculto para informar ao formulário qual é o id do registro após atualizar no banco de dados -->
    <div class="form-group mb-3">
        <label class="mb-1" for="nome">Nome</label>
        <input type="text" asp-for="Nome" id="nome" class="form-control" placeholder="Digite o nome do usuario">
        @Html.ValidationMessageFor(x => x.Nome)
    </div>

    <div class="form-group">
        <label for="login">Login</label>
        <input type="text" asp-for="Login" id="login" name="login" class="form-control" />
        @Html.ValidationMessageFor(x => x.Login)
    </div>

    <div class="form-group mb-3">
        <label for="email">E-mail</label>
        <input type="email" asp-for="Email" id="email" class="form-control" placeholder="exemplo@gmail.com" />
        @Html.ValidationMessageFor(x => x.Email)
    </div>

    <div class="form-group">
        <label for="Perfil">Perfil</label>
        <select asp-for="Perfil" class="form-control">
            <option value="0">Selecione</option>
            <option value="@PerfilEnum.Admin">Administrador</option>
            <option value="@PerfilEnum.Padrão">Padrão</option>
        </select>
    </div>

    <div class="form-group">
        <label for="senha">Senha</label>
        <input type="text" id="senha" asp-for="Senha" class="form-control"/>
        @Html.ValidationMessageFor(x => x.Senha);
    </div>

    <div class="d-grid gap-2 mt-3">
        <button type="submit" class="btn btn-primary">Alterar</button>
        <a class="btn btn-secondary" asp-controller="Usuario" asp-action="Index" role="button">Voltar</a>
    </div>

</form>